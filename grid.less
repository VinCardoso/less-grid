	// - - - - - Grid

		// Variables
			@gridMaxWith: 1440px; 		/* Grid max size */
			@gridColumns: 12; 			/* Number of columns */
			@gridGutter: 20px; 			/* Space between columns */
			@gridExtraMargin: 20px; 	/* Extra margin in the begin and in the final of grid. (If you don't want just put '0px')*/
			@gridFluid: true; 			/* For fluid grid select true, or false to fixed grid */

		// Pre Math
			@gridSumGutters: (@gridGutter * @gridColumns) + (2 * @gridExtraMargin);
			@gridWithUse: @gridMaxWith - @gridSumGutters;
			@oneGrid: @gridWithUse / @gridColumns;
			@gridMargin: (@gridGutter / 2);

		// Generate Grid
			.generate-grid(@gridColumns; @i: 1) when (@i =< @gridColumns) {
				.grid@{i}{

					// Grid Fixed
						.calculate(@gridFluid) when (@gridFluid = false){
							width: (@i * @oneGrid) + (@gridGutter * (@i - 1));
						}

					// Grid Fluid
						.calculate(@gridFluid) when (@gridFluid = true){
							width: percentage(((@i * @oneGrid) + (@gridGutter * (@i - 1))) / (@gridMaxWith - @gridExtraMargin *2));
						}

					.calculate(@gridFluid);
					float:left;
					margin-left: @gridMargin;
					margin-right: @gridMargin;
				}
				.generate-grid(@gridColumns; (@i+1));
			}
			.generate-grid(@gridColumns);

		// More Variables
			.container{width: @gridMaxWith; margin: 0px auto;position: relative;}
			.grid100{width: 100%;margin: 0px;}
			.row{.clear;width: 100%;position: relative;margin-top: 0px;margin-left: 0px;padding-right: @gridExtraMargin;padding-left: @gridExtraMargin;}